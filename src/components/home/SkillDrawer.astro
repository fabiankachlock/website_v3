---
const id = Math.random().toString().substring(2, 7);

export type Props = {
  tools: string[];
  featuredTools: string[];
};

const { featuredTools, tools } = Astro.props;
---

<div class="skill-drawer" data-id={id}>
  <div class="skill-drawer__head">
    <!-- <div class="skill-drawer__percentage"></div> -->
    <div class="skill-drawer__title">
      <div class="skill-drawer__name">
        <!-- TODO: shoudl this be a h3? -->
        <slot name="title" />
      </div>
      <div class="featured-tools">
        {featuredTools.reverse().map(name => <p class="featured-tools__tool">{name}</p>)}
      </div>
    </div>
    <button class="skill-drawer__opener" aria-label="Toggle open state"></button>
  </div>
  <div class="skill-drawer__content">
    <div class="skill-drawer__text">
      <slot name="content" />
    </div>
    <div class="tools">
      {featuredTools.concat(tools).map(name => <p class="tools__tool">{name}</p>)}
    </div>
  </div>
</div>

<script></script>

<style>
  .skill-drawer {
    display: grid;
    grid-template-rows: auto 0fr;
    border: 1px solid var(--color-text);
    background-color: var(--color-bg);
    transition:
      grid-template-rows 200ms ease-in-out,
      margin 140ms linear,
      border 70ms linear,
      border-radius 140ms linear;
  }

  .skill-drawer:not(:first-of-type) {
    border-top: none;
  }

  .skill-drawer:first-child {
    border-radius: 1rem 1rem 0 0;
  }

  .skill-drawer:last-child {
    border-radius: 0 0 1rem 1rem;
  }

  .skill-drawer.open {
    grid-template-rows: auto 1fr;
    margin: 1rem 0;
    border-radius: 1rem;
    border: 2px solid var(--color-text);
    background-color: var(--color-surface);
  }

  .skill-drawer.open + .skill-drawer {
    border-top: 1px solid var(--color-text);
  }

  .skill-drawer__head {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding: 1rem;
    gap: 1rem;
    height: min-content;
    cursor: pointer;
    transition: margin-bottom 140ms linear;
  }

  .skill-drawer__title {
    flex: 1 0 0;
    width: 100%;
  }

  .skill-drawer__opener {
    width: 3rem;
    height: 3rem;
    position: relative;
    background: none;
    border: none;
    cursor: pointer;
  }

  .skill-drawer__opener::before,
  .skill-drawer__opener::after {
    content: '';
    width: 35%;
    height: 3px;
    position: absolute;
    left: 50%;
    top: 50%;
    translate: -50%;
    background: var(--color-text);
    transition: scale 140ms linear;
  }

  .skill-drawer__opener::after {
    rotate: 90deg;
  }

  .skill-drawer.open .skill-drawer__opener::after {
    scale: 0 1;
  }

  .skill-drawer.open .skill-drawer__opener::after,
  .skill-drawer.open .skill-drawer__opener::before {
    background: var(--color-primary);
  }

  .skill-drawer__content {
    overflow: hidden;
    font-family: 'Mona Sans';
    font-size: 1rem;
  }

  .skill-drawer__title {
    font-family: 'Mona Sans';
    font-size: 1.6rem;
    color: var(--color-text-header);
  }

  .skill-drawer__name {
    margin-bottom: 1rem;
    transition: margin 70ms linear;
  }

  .skill-drawer.open .skill-drawer__name {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }

  .tools,
  .featured-tools {
    display: flex;
    flex-wrap: wrap;
    gap: 0.3rem 0;
    transform-origin: left center;
    transition: scale 140ms linear;
  }

  .featured-tools {
    flex-direction: row-reverse;
    justify-content: flex-end;
  }

  .skill-drawer.open .featured-tools {
    scale: 0;
  }

  .skill-drawer.open .skill-drawer__head {
    margin-bottom: -2rem;
  }

  .tools__tool,
  .featured-tools__tool {
    margin: 0;
    font-size: 1rem;
    background-color: var(--color-surface);
    padding: 0.3rem 0.8rem;
    white-space: nowrap;
    box-shadow: 0 0 0 0 var(--color-text);
    border: 1px solid var(--color-text);
    transition:
      margin 140ms linear,
      padding 140ms linear,
      translate 140ms linear,
      box-shadow 140ms linear,
      border-radius 100ms ease-in;
  }

  .featured-tools__tool:first-child {
    border-radius: 0 20px 20px 0;
  }

  .featured-tools__tool:last-child {
    border-radius: 20px 0 0 20px;
  }

  .featured-tools__tool:not(:first-child) {
    border-right-color: transparent;
  }

  .featured-tools__tool:hover {
    border-radius: 20px;
    margin: 0 0.5rem;
    padding: 0.3rem 1rem;
    translate: -3px -3px;
    box-shadow: 3px 3px 0 0 var(--color-text);
    border-right-color: var(--color-text);
    background-color: var(--color-primary);
    color: var(--color-primary-text);
  }

  .featured-tools__tool:hover + .featured-tools__tool {
    border-right: 1px solid var(--color-text);
  }

  .skill-drawer__text {
    margin-top: 0.5rem;
    padding: 0 1rem;
    font-size: 1.25rem;
    color: var(--color-text);
  }

  .tools {
    padding: 1rem;
  }

  .tools__tool {
    border-radius: 20px;
    margin: 0 0.2rem;
    padding: 0.3rem 1rem;
  }

  .tools__tool:hover {
    translate: -3px -3px;
    box-shadow: 3px 3px 0 0 var(--color-text);
    background-color: var(--color-primary);
    color: var(--color-primary-text);
  }
</style>
