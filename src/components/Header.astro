---
import commitIcon from '@carbon/icons/svg/32/commit.svg?raw';
import i18next, { t } from 'i18next';

import svgLogo from '@/assets/logo.svg?raw';
import svgMenuButton from '@/assets/menu_button.svg?raw';
import { getProjectLinks } from '@/content/projects';

import LanguageSelect from './LanguageSelect.astro';
import LocalizedLink from './LocalizedLink.astro';
import ThemeSwitch from './ThemeSwitch.astro';
import Translation from './Translation.astro';

const projectLinks = await getProjectLinks(i18next.language);
---

<header class="head">
  <div class="floating-menu">
    <button class="menu__opener" aria-label={t('common.openMenu')}>
      <Fragment set:html={svgMenuButton} />
    </button>
  </div>
  <nav class="menu">
    <div class="menu__content">
      <div class="menu__logo">
        <LocalizedLink path="/" label={t('common.goToStart')}>
          <Fragment set:html={svgLogo} />
        </LocalizedLink>
      </div>
      <ul class="menu__nav">
        <li class="menu__item">
          <LocalizedLink classes="menu__link" path="/#about">
            <Translation>
              <span slot="de">Ãœber mich</span>
              <span slot="en">About me</span>
            </Translation>
          </LocalizedLink>
        </li>
        <li class="menu__item">
          <LocalizedLink classes="menu__link" path="/#skills">
            <Translation>
              <span slot="de">Skills</span>
              <span slot="en">Skills</span>
            </Translation>
          </LocalizedLink>
        </li>
        <li class="menu__item menu__item--project">
          <LocalizedLink classes="menu__link" path="/#projects">
            <Translation>
              <span slot="de">Projekte</span>
              <span slot="en">Projects</span>
            </Translation>
          </LocalizedLink>
        </li>
        {
          projectLinks.map(project => (
            <li class="menu__item menu__item--project-item">
              <Fragment set:html={commitIcon} />
              <a class="menu__link" href={project.url}>
                {project.title}
              </a>
            </li>
          ))
        }
        <li class="menu__item menu__item--contact">
          <LocalizedLink classes="menu__link" path="/#contact">
            <Translation>
              <span slot="de">Kontakt</span>
              <span slot="en">Contact</span>
            </Translation>
          </LocalizedLink>
        </li>
      </ul>
      <div class="menu__spacer"></div>
      <ul class="menu__extra">
        <li class="menu__item">
          <LocalizedLink classes="menu__link" path="/impressum">
            <Translation>
              <span slot="de">Impressum</span>
              <span slot="en">Imprint</span>
            </Translation>
          </LocalizedLink>
        </li>
        <li class="menu__item">
          <LocalizedLink classes="menu__link" path="/datenschutz">
            <Translation>
              <span slot="de">Datenschutz</span>
              <span slot="en">Privacy</span>
            </Translation>
          </LocalizedLink>
        </li>
      </ul>
      <div class="menu__actions">
        <ThemeSwitch />
        <LanguageSelect />
      </div>
    </div>
  </nav>
</header>

<style>
  .floating-menu {
    position: fixed;
    top: 1rem;
    right: 1rem;
    background-color: transparent;
    z-index: 1200;
    background-color: var(--color-bg);
    border: 2px solid var(--color-surface);
    padding: 0.2rem;
    border-radius: 7px;
  }

  .menu__opener {
    height: 3rem;
    width: 3rem;
    margin: 0;
    padding: 0;
    display: block;
    background: transparent;
    border: none;
    cursor: pointer;
    transition: scale 70ms linear;
  }

  .menu__opener:active {
    scale: 0.95;
  }

  .menu__opener :global(svg) {
    height: 3rem;
    /*                discard offset to start with gap 
                      |   gap to start to hide first cross (480 diag.)
                      |   |   menu button open state
                      |   |   |    gap to hide second cross piece (480+360)
                      |   |   |    |*/
    stroke-dasharray: 480 480 1400 840;
    stroke-dashoffset: 480;
    transition:
      stroke-dasharray 300ms ease-out,
      stroke-dashoffset 300ms ease-out;
  }

  .head.open .menu__opener :global(svg) {
    /*                show first cross 
                      |   gap to start to hide open state
                      |   |   show second cross
                      |   |   |   */
    stroke-dasharray: 480 1760 480;
    stroke-dashoffset: 0;
  }

  .menu {
    background-color: var(--color-surface);
    position: fixed;
    top: 0;
    bottom: 0;
    width: min(70vw, 300px);
    left: 100%;
    transition: left 300ms ease-in-out;
    overflow-y: auto;
    overflow-x: hidden;
    border-left: 2px solid var(--color-text);
    z-index: 1000;
  }

  .menu__content {
    padding: 1rem;
    display: flex;
    position: relative;
    flex-direction: column;
    min-height: calc(100% - 2rem);
  }

  .menu__logo {
    height: 8rem;
    margin-left: 1rem;
    margin-bottom: 2rem;
  }

  .menu__logo :global(svg) {
    height: 100%;
  }

  .menu__nav {
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  .menu__item {
    padding: 0.5rem 1rem;
    margin: 0.5rem 0;
  }

  .menu__item--project {
    margin-bottom: 0;
  }

  .menu__item--project-item {
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .menu__item--project-item :global(svg) {
    height: 2rem;
    width: 2rem;
    fill: var(--color-primary);
    flex-shrink: 0;
  }

  .menu__item--contact {
    margin-top: 1rem;
  }

  .menu__nav :global(.menu__link) {
    font-family: 'Source Code Pro';
    font-weight: 500;
    font-size: 1.5rem;
    color: var(--color-text-header);
  }

  .menu__item--project-item :global(.menu__link) {
    font-weight: 400;
    font-size: 1.4rem;
  }

  .menu__nav :global(.menu__link:hover) {
    font-style: italic;
    color: var(--color-primary);
  }

  .menu__extra :global(.menu__link) {
    font-family: 'Mona Sans';
    font-size: 1rem;
    color: var(--color-text);
  }

  .menu__extra :global(.menu__link:hover) {
    color: var(--color-primary);
  }

  .menu__spacer {
    flex-grow: 1;
  }

  .menu__actions {
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;
  }

  .head:has(*:focus) .menu,
  .head.open .menu {
    left: calc(100vw - min(70vw, 300px));
  }

  .head:has(*:focus) + :global(.main-content),
  .head.open + :global(.main-content) {
    left: max(-70vw, -300px);
  }

  .head.dragging + :global(.main-content),
  .head.dragging .menu {
    transition-duration: 10ms;
  }

  .head.dragging + :global(.main-content) {
    left: calc(max(-70vw, -300px) * var(--dragged-offset));
  }

  .head.dragging .menu {
    left: calc(100vw - min(70vw, 300px) * var(--dragged-offset));
  }

  .head.dragging.open + :global(.main-content) {
    left: calc(max(-70vw, -300px) + min(70vw, 300px) * var(--dragged-offset));
  }

  .head.dragging.open .menu {
    left: calc(100vw - min(70vw, 300px) + min(70vw, 300px) * var(--dragged-offset));
  }

  @media only screen and (min-width: 1024px) {
    .floating-menu {
      display: none;
    }

    :global(.main-content) {
      width: calc(100vw - 300px) !important;
      left: 0 !important;
    }

    .menu {
      left: calc(100% - 300px) !important;
    }
  }

  @media only screen and (min-width: 1324px) {
    body {
      --menu-width: min(calc(100vw - 1024px), 450px);
    }

    .menu {
      width: var(--menu-width) !important;
    }

    :global(.main-content) {
      width: calc(100vw - var(--menu-width)) !important;
      left: 0 !important;
    }

    .menu {
      left: calc(100% - var(--menu-width)) !important;
    }
  }
</style>
